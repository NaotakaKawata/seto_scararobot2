<?xml version="1.0"?>
<launch>

  <!-- Load the seto_scararobot URDF model into the parameter server -->
  <param name="robot_description" textfile="$(find seto_scararobot2_description)/urdf/seto_scararobot2.urdf" />	

  <!-- gazebo ============================================================== -->

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find seto_scararobot2_control)/config/controllers.yaml" command="load"/>

  <!-- Start Gazebo with an empty world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch"/>

  <!-- Spawn a seto_scararobot in Gazebo, taking the description from the parameter server -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description -urdf -model seto_scararobot2" output="screen"/>

  <!-- controller_manager -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
       args="arm_controller seto_scararobot2/joint_state_controller" output="screen"/>

  <!-- gazebo ============================================================== -->

  <!-- robot_state_publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
  </node>

  <!-- rviz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find seto_scararobot2_description)/launch/seto_scararobot2.rviz" />

  <!-- アームの制御 -->
	<node name="move_arm_dynamixel2" pkg="seto_scararobot2" type="move_arm_dynamixel2">
    <remap from="/dynamixel_workbench/joint_trajectory" to="/arm_controller/command"/>
    <remap from="/dynamixel_workbench/joint_states" to="/joint_states"/>
  </node>

  <!-- 統括コントロール -->
	<node name="seto_scararobot2" pkg="seto_scararobot2" type="seto_scararobot2"/>

  <!-- エンドエフェクタ ダミーノード -->
  <include file="$(find beadsee)/launch/beadsee_dummy.launch"/>

  <!-- webサーバーノード起動 -->
  <node pkg="beads_setter" name="beads_setter" type="beads_setter.py"/>

</launch>
